Debugging 기술문서 정리하기
  1. Debugging 
    - 개발자가 짠 코드에서 발생한 오류(버그)를 찾기위해 코드를 읽으면서 어떤 변화가 이러나고 있는지 확인하는 것이다 

    1-1. 오류에는 크게 두가지가 있다
    문법적 오류(Syntax error) : 해당 언어의 문법에 적합하지 않아서 컴파일러가 번역을 못하는 경우 컴파일러는 Syntax Error를 많이 겪습니다. 컴파일 하기 전에 오류가 발생하는 경우는 이 경우입니다.

    논리적 오류(Logical error) : 논리적으로 발생하는 오류입니다. 문법적으로는 문제가 없으나 실행해보면 문제가 생기는 경우이다. 

  2. Breakpoints란
    - 개발자가 프로그램이 실행될 때 의도적으로 멈춰서 결과 값이 어떻게 나오는지 자세히 보기 위해 임의로 지정하는 지점이다. 그리고 코드가 한줄 한줄 실행되면서 변수, 메모리, 주소값 등등 나타낸다

  3. Watch 사용법
    - 확인하고 싶은 변수의 값이 어떻게 변하는지 볼 수 있다

  4. Call Stack 의미
      - Call Stack이란 함수의 호출을 기록하는 자료구조이다. 기본적으로 우리가 프로그램 안에서 위치한 곳이며, 만약 우리가 어떤 함수를 실행시킨다면, 우리는 스택 위에 무언가를 올리는(push) 행위를 하는 것이다. 그리고 우리가 함수로부터 반환을 받을 때, 우리는 스택의 맨 위를 가져오는(pop) 것이다.
    4-1 자료구조
      - 자료구조란 사전적인 의미는 자료(Data)의 집합의 의미하며, 각 원소들이 논리적으로 정의된 규칙에 의해 나열되며 자료에 대한 처리를 효율적으로 수행할 수 있도록 자료를 구분하여 표현한 것

  5-1. Step over
    - 중단점의 다음 라인으로 이동한다. 이때 다음라인이 함수라면 함수를 실행하되 함수 내부로 들어가지는 않는다 
  5-2. Step into
  - 중단점의 다음 라인으로 이동한다. 이때 다음라인이 함수라면 함수 내부로 들어가서 함수를 실행 시킨다
  5-3. Step out
  - 현재 함수의 리턴으로 이동한다. 즉 현재 함수를 빠져나온다